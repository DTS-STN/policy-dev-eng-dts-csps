// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using pde_poc_sim.Storage;

namespace pde_poc_web.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210223140202_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.Case", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBase")
                        .HasColumnType("boolean");

                    b.Property<decimal>("MaxWeeklyAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("NumWeeks")
                        .HasColumnType("integer");

                    b.Property<double>("Percentage")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Flsah")
                        .HasColumnType("text");

                    b.Property<Guid>("UnemploymentRegionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UnemploymentRegionId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.PersonResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BaseAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SimulationResultId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("VariantAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SimulationResultId");

                    b.ToTable("PersonResults");
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.Simulation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BaseCaseId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("VariantCaseId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BaseCaseId");

                    b.HasIndex("VariantCaseId");

                    b.ToTable("Simulations");
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.SimulationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("SimulationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SimulationId")
                        .IsUnique();

                    b.ToTable("SimulationResults");
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.UnemploymentRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BestWeeks")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.Property<double>("UnemploymentRate")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("UnemploymentRegions");
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.WeeklyIncome", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("WeeklyIncome");
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.Person", b =>
                {
                    b.HasOne("pde_poc_sim.Storage.EFModels.UnemploymentRegion", "UnemploymentRegion")
                        .WithMany()
                        .HasForeignKey("UnemploymentRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.PersonResult", b =>
                {
                    b.HasOne("pde_poc_sim.Storage.EFModels.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pde_poc_sim.Storage.EFModels.SimulationResult", "SimulationResult")
                        .WithMany("PersonResults")
                        .HasForeignKey("SimulationResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.Simulation", b =>
                {
                    b.HasOne("pde_poc_sim.Storage.EFModels.Case", "BaseCase")
                        .WithMany()
                        .HasForeignKey("BaseCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pde_poc_sim.Storage.EFModels.Case", "VariantCase")
                        .WithMany()
                        .HasForeignKey("VariantCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.SimulationResult", b =>
                {
                    b.HasOne("pde_poc_sim.Storage.EFModels.Simulation", "Simulation")
                        .WithOne("SimulationResult")
                        .HasForeignKey("pde_poc_sim.Storage.EFModels.SimulationResult", "SimulationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pde_poc_sim.Storage.EFModels.WeeklyIncome", b =>
                {
                    b.HasOne("pde_poc_sim.Storage.EFModels.Person", null)
                        .WithMany("WeeklyIncomes")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
